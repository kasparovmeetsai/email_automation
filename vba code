Sub CreateAndEmailSheet()
    Dim wb As Workbook
    Dim newWb As Workbook
    Dim ws As Worksheet
    Dim newWs As Worksheet
    Dim rng As Range
    
    ' Set the existing workbook and worksheet (10th sheet)
    Set wb = ThisWorkbook
    Set ws = wb.Sheets(10)
    
    ' Define the range to copy (A1:B3 based on the image)
    Set rng = ws.Range("A1:B3")
    
    ' Create a new workbook and copy the range into it
    Set newWb = Workbooks.Add
    Set newWs = newWb.Sheets(1)
    rng.Copy
    newWs.Range("A1").PasteSpecial Paste:=xlPasteValues
    
    ' Save the new workbook temporarily
    Dim tempFilePath As String
    tempFilePath = Environ("TEMP") & "\tempWorkbook.xlsx"
    newWb.SaveAs tempFilePath
    
    ' Send the new workbook as an email attachment
    Dim OutlookApp As Object
    Dim OutlookMail As Object
    
    Set OutlookApp = CreateObject("Outlook.Application")
    Set OutlookMail = OutlookApp.CreateItem(0)
    
    With OutlookMail
        .To = "recipient@example.com"
        .Subject = "New Workbook"
        .Body = "Please find the attached workbook."
        .Attachments.Add tempFilePath
        .Send
    End With
    
    ' Close the new workbook without saving
    newWb.Close SaveChanges:=False
    
    ' Delete the temporary file
    Kill tempFilePath
    
    ' Clean up
    Set newWs = Nothing
    Set newWb = Nothing
    Set ws = Nothing
    Set wb = Nothing
    Set OutlookMail = Nothing
    Set OutlookApp = Nothing
    
    MsgBox "Email sent successfully."
End Sub




#NEXT CODE#

Sub UpdateValues()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Sheet1")

    Dim rngExisting As Range
    Set rngExisting = ws.Range("B1:D7")

    Dim rngNew As Range
    Set rngNew = ws.Range("B8:D12")

    Dim cell As Range
    Dim cellNew As Range
    Dim matchFound As Boolean

    For Each cellNew In rngNew.Rows
        matchFound = False

        For Each cell In rngExisting.Rows
            If cell.Cells(1, 1).Value = cellNew.Cells(1, 1).Value And _
               cell.Cells(1, 2).Value = cellNew.Cells(1, 2).Value Then
                cell.Cells(1, 3).Value = cell.Cells(1, 3).Value + cellNew.Cells(1, 3).Value
                matchFound = True
                Exit For
            End If
        Next cell

        If Not matchFound Then
            ' Find the first empty row in the existing range
            For Each cell In rngExisting.Rows
                If IsEmpty(cell.Cells(1, 1).Value) And IsEmpty(cell.Cells(1, 2).Value) Then
                    cell.Cells(1, 1).Value = cellNew.Cells(1, 1).Value
                    cell.Cells(1, 2).Value = cellNew.Cells(1, 2).Value
                    cell.Cells(1, 3).Value = cellNew.Cells(1, 3).Value
                    Exit For
                End If
            Next cell
        End If
    Next cellNew
End Sub


